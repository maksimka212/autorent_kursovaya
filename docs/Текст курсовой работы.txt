Департамент образования и науки Костромской области
Областное государственное бюджетное профессиональное образовательное учреждение «Костромской энергетический техникум имени Ф.В. Чижова»
(ОГБПОУ «КЭТ имени Ф.В. Чижова»)




КУРСОВАЯ РАБОТА
Разработка информационной системы для _________________________________________________________
ПМ.06 Сопровождение информационных систем
МДК.06.03 Устройство и функционирование информационной системы
специальность: 09.02.07 «Информационные системы и программирование»

Студент	Арефьев Андрей Владимирович	____________	__.__.20__ г.
ФИО	          Подпись

Оценка выполнения и защиты курсовой работы		____________


Руководитель    Бессараб Степан Константинович   ____________ __.__.20__ г.
                     Подпись




Кострома 20__
ОГЛАВЛЕНИЕ
ОГЛАВЛЕНИЕ	2
ГЛОССАРИЙ	3
ВВЕДЕНИЕ	4
ГЛАВА 1. ОБОСНОВАНИЕ ОБЪЕКТА АВТОМАТИЗАЦИИ	6
1.1	Обоснование необходимости внедрения и использования информационной системы.	6
1.2	Общие требования к информационной системе	6
1.3	Краткие сведения об информационной системе	8
1.4	Разработка технического задания на разработку информационной системы	9
ГЛАВА 2. РЕАЛИЗАЦИЯ БАЗЫ ДАННЫХ	11
ИНФОРМАЦИОННОЙ СИСТЕМЫ	11
2.1	Анализ требований к базе данных	11
2.2	Логическая структура информационной системы	12
2.3	Запросы к информационной системе	13
ГЛАВА 3. РАЗРАБОТКА ИНФОРМАЦИОННОЙ СИСТЕМЫ	15
3.1	Разработка кода информационной системы	15
ГЛАВА 4. ТЕСТИРОВАНИЕ ИНФОРМАЦИОННОЙ СИСТЕМЫ	26
4.1	План тестирования	26
4.2	Написание тест-кейсов	26
4.3	Юнит-тестирование	28
ЗАКЛЮЧЕНИЕ	30
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ	31

 
ГЛОССАРИЙ
Автоматизация – это процесс использования технических средств и программных решений для выполнения задач и операций без необходимости вмешательства человека. Она заключается в замене ручного выполнения задач на автоматическое выполнение с использованием компьютеров, программ и других технологий.
Веб-сайт – это коллекция связанных веб-страниц, доступных через интернет и обычно хранящихся на одном домене. Веб-сайт представляет собой электронное пространство, где организации, компании, частные лица и другие пользователи могут размещать информацию, контент, продукты или услуги.
Информационная система (ИС) – это комплекс организационных, программных и аппаратных средств, предназначенных для сбора, хранения, обработки, передачи и использования информации с целью поддержки функций и задач организации или предприятия.
Прокат автомобилей – это сдача автомобиля без водителя на определенный период времени(от нескольких часов до нескольких месяцев и даже лет).
CSS – формальный язык декорирования и описания внешнего вида
документа, написанного с использованием языка разметки. 
HTML – стандартизированный язык программирования
гипертекстовой разметки документов для просмотра веб-страниц в браузере.
PHP – язык программирования, специально разработанный для
написания web-приложений, исполняющихся на Web-сервере.

 
ВВЕДЕНИЕ
В настоящее время автомобили стали неотъемлемой частью повседневной жизни человека. Автомобильная отрасль имеет обширный выбор и каждый автомобиль имеет свою цену. Ввиду этого не каждый человек может себе позволить комфортный автомобиль для повседневного использования. Благодаря развитию услуг и индустрии стало возможно арендовать автомобиль на определенное время за малую сумму.
Актуальность исследования:
Создание качественного веб-сайта для проката автомобилей имеет большое значение для бизнеса. Он помогает привлечь новых клиентов, повысить уровень аренды автомобиля, улучшить общий опыт арендаторов и укрепить позиции заведения на рынке проката автомобилей.
Цель исследования: разработка веб-сайта для проката автомобилей с использованием современных технологий веб-разработки, включая автоматизацию оформления аренды без третьих лиц, добавление новых автомобилей в прайс-лист с автомобилями,
Объект исследования: деятельность проката автомобилей “AutoRent” 
(ООО «AutorentCompany» ).
Предмет исследования: работа администратора на сайте, пользовательские функции.
Задачи исследования:
1.	Анализ и проектирование структуры и функциональности веб-сайта проката автомобилей;
2.	Выбор подходящих технологий и инструментов для разработки, таких как HTML, CSS, JavaScript и база данных.
3.	Реализация функциональности веб-сайта;
4.	Тестирование и отладка веб-сайта для обеспечения его корректной работы и отзывчивости;
5.	Документирование процесса разработки и создание руководства пользователя для веб-сайта проката автомобилей.
Результаты этой курсовой работы позволят компании «Autorent» улучшить свою онлайн-присутствие, обеспечить более удобный и доступный опыт для клиентов, а также повысить эффективность управления автомобилями и арендой
Вывод: в итоге работы будет представлен работающий сайт, в котором существуют определенные функции, благодаря которым, пользователь может легко и быстро арендовать автомобиль, посмотреть характеристики автомобиля, а администратор сможет беспрепятственно добавить/редактировать/удалять позиции автомобилей в прайс-листе.
Структура работы соответствует логике исследования и включает в себя введение, основную часть, заключение, список литературы, 5 приложений и имеет объём не более 30 страниц.
 
ГЛАВА 1. ОБОСНОВАНИЕ ОБЪЕКТА АВТОМАТИЗАЦИИ
1.1	 		Обоснование необходимости внедрения и использования информационной системы.
Внедрение и использование информационной системы (ИС) для сайта по прокату автомобилей предоставляет множество преимуществ, включая улучшенную доступность и удобство для клиентов, оптимизацию процессов заказа и бронирования, улучшение взаимодействия с клиентами и повышение эффективности управления и аналитики. Для выбора системы автоматизации необходимо определить функциональность, совокупную стоимость владения, гарантии успешного завершения проекта, надежность и долговечность системы, сроки окупаемости, уровень сервиса и возможность сопровождения и развития системы. Определение реальных потребностей фирмы и разработка плана развития на несколько лет позволяют снизить риски и выбрать подходящую ИС, избегая проблем "лоскутной" автоматизации.
Таким образом, для реализации задач управления автопарком и арендой выбран вариант реализации посредством разработки веб-сайта «AutoRent». Выбор веб-сайта как средства реализации позволяет эффективно использовать современные технологии веб-разработки, способствуя привлечению новых пользователей и улучшению общего опыта.
1.2	Общие требования к информационной системе
Общие требования: 
При разработке сайта для проката автомобилей следует учитывать ряд общих требований, которые помогут создать удобное и привлекательное онлайн-присутствие. Вот некоторые общие требования к сайту проката автомобилей:
1.	Надежность: Информационная система должна быть стабильной и надежной, обеспечивая непрерывную работу и минимальное количество сбоев.
2.	Безопасность: Система должна быть защищена от несанкционированного доступа, а также обеспечивать конфиденциальность и целостность данных.
3.	Производительность: Информационная система должна иметь достаточную производительность для обработки требуемого объема данных и пользовательских запросов в заданные временные рамки.
4.	Масштабируемость: Система должна быть способна масштабироваться, чтобы справиться с ростом объема данных и числа пользователей.
5.	Удобство использования: Система должна быть простой в использовании и иметь интуитивно понятный интерфейс, чтобы пользователи могли эффективно выполнять свои задачи.
6.	Поддержка: Информационная система должна иметь механизмы поддержки, включая документацию, обучение пользователей и техническую поддержку для решения возникающих проблем.
Пользовательские требования к сайту проката автомобилей:
1.	Аренда автомобилей: Пользователи должны иметь возможность арендовать автомобиль без каких либо проблем.
2.	Информация о компании: Сайт должен предоставлять информацию о расположении компании, его контактных данных (телефон, электронная почта) и форму обратной связи.
3.	Автомобили и цены: Сайт должен предоставлять актуальный прайс-лист с автомобилями компании с указанием цен на автомобиль.
Функциональные требования к сайту проката автомобилей:
1.	Возможность эффективно изменять/добавлять/удалять автомобили.
2.	Возможность управлять арендой и просматривать её.
3.	Возможность просмотра всех договоров об аренде.

Нефункциональные требования к сайту проката автомобилей:
1.	Дизайн и пользовательский интерфейс: Сайт должен иметь привлекательный дизайн и интуитивно понятный интерфейс, чтобы пользователи могли легко найти нужную информацию и арендовать автомобиль.
2.	Оптимизация для мобильных устройств: Сайт должен быть адаптирован для просмотра на различных мобильных устройствах, чтобы пользователи могли получить доступ к информации и арендовать автомобиль через свои смартфоны или планшеты.
3.	Быстродействие: Сайт должен загружаться быстро, чтобы пользователи не испытывали задержек и ожидания при просмотре информации или аренды автомобилья.
4.	Безопасность: Сайт должен обеспечивать защищенную передачу данных.
1.3	 Краткие сведения об информационной системе
Для того, чтобы точно понять намерения заказчика необходимо проанализировать требования с его стороны. Для этого создана таблица 1 «Краткие сведения об информационной системе»:
Таблица 1
Краткие сведения об информационной системе
Название	Описание
Цель ИС (с точки зрения заказчика)	Привлечение пользователей, увеличение объема аренды и удовлетворение потребностей пользователей.
Задачи ИС (с точки зрения заказчика)	●	Предоставление актуального прайс-листа и цен на автомобили. 
●	Предоставление информации о расположении, контактных данных.
●	Обеспечение удобного и интуитивно понятного пользовательского интерфейса для легкого взаимодействия с сайтом и выполнения задач.
Сроки выполнения	20.03.2023 – 1.07.2023
Область применения	Информационная система может быть применена в компании «Autorent»
Ресурсы	Разработчик (Арефьев Андрей Владимирович), аппаратные средства, такие как компьютер, серверное оборудование, программные средства.
Таким образом, проанализированы основные потребности заказчика для создания информационной системы. Данная информация поможет более точно разобраться в предметной области и разработать качественный программный продукт.
1.4	Разработка технического задания на разработку информационной системы
Техническое задание (ТЗ) – это документ, который описывает требования и спецификации для разработки информационной системы, программного обеспечения, веб-сайта или другого проекта.
Техническое задание разрабатывается в соответствие с ГОСТ 34.602-89 «Техническое задание на создание (развитие или модернизацию) системы», который был введен 1 сентября 1990 года.
Этапы разработки технического задания включают следующие шаги: анализ и сбор требований, определение целей и ограничений проекта, разработка структуры и функциональности системы, составление спецификаций, уточнение деталей с заказчиком, утверждение и согласование документа. Каждый из этих этапов играет важную роль в разработке технического задания и способствует успешной реализации проекта, удовлетворяющего требованиям заказчика [2].
На основании анализа, было разработано техническое задание для представленной ИС см. Приложение №2.
В процессе работы над данной главой был проведен анализ общих, пользовательских, функциональных и нефункциональных требований к информационной системе. Были изучены цели и задачи ИС с точки зрения заказчика, определены сроки выполнения работы и ресурсы, необходимые для разработки системы. Кроме того, в рамках работы было разработано техническое задание, описывающее детали и спецификации системы.
 
ГЛАВА 2. РЕАЛИЗАЦИЯ БАЗЫ ДАННЫХ
 ИНФОРМАЦИОННОЙ СИСТЕМЫ
2.1	Анализ требований к базе данных
Для того, чтобы правильно спроектировать базу данных и эффективно работать с ней необходимо проанализировать требования к базе данных. Анализ требований к базе данных представлен в таблице 2:
Таблица 2
Анализ требований к базе данных
Вопрос	Ответ
Для каких типов задач проектируется БД?	База данных проектируется для хранения и управления информацией, необходимой для выполнения задач, связанных с учетом аренды, обработкой данных пользователей.
Какие данные должны храниться в БД?	База данных должна содержать информацию об автомобилях, их ценах и классах, а также данные об аренде, и пользователях.
Какие связи между таблицами будут использоваться?	Для хранения информации об аренде, автомобиле и его составляющих, а также о пользователях, их будут использоваться связи типа "один ко многим" (one-to-many).
Какие ограничения на значения полей должны быть установлены?	В базе данных необходимо установить ограничения на допустимые значения полей, например, максимальную длину наименования продукта или минимальную цену за единицу товара. Также необходимо предусмотреть проверки на уникальность и отсутствие дубликатов в определенных полях.
Какие инструменты будут использоваться для проектирования БД?	Для проектирования базы данных будут использоваться средства, такие как ER-диаграммы, реляционная модель данных и язык SQL для создания таблиц, индексов и запросов. Также будут использоваться средства для администрирования БД, например, MySQL Workbench или PhpMyAdmin.
2.2	Логическая структура информационной системы
Диаграмма «Сущность-связь» (ERD, Entity-Relationship Diagram, ER-диаграмма) – это разновидность блок-схемы, где показано, как разные «сущности» (люди, объекты, концепции и так далее) связаны между собой внутри системы. ER-диаграммы чаще всего применяются для проектирования и отладки реляционных баз данных в сфере образования, исследования и разработки программного обеспечения и информационных систем для бизнеса.
ER- диаграмма и словарь БД представлен в Приложении №3.
Сущность представляет собой объект или объектный класс, о котором хранится информация в базе данных. Сущность может быть реальным объектом (например, человек, товар) или абстрактным понятием (например, заказ, категория). Сущности обычно имеют уникальные идентификаторы, которые позволяют однозначно идентифицировать каждую сущность в базе данных.
Атрибут сущности представляет собой характеристику или свойство, описывающее сущность. Он содержит информацию о конкретном аспекте сущности. Например, для сущности "человек" атрибутами могут быть имя, возраст, адрес и т.д. Каждый атрибут имеет имя и тип данных, который определяет, какая информация может быть хранена в этом атрибуте.
Связь представляет отношение между двумя или более сущностями в базе данных. Она определяет, как одна сущность связана с другой и какая информация может быть связана между ними. Связи могут быть однонаправленными или двунаправленными, однозначными или многозначными. Например, связь между сущностями "клиент" и "заказ" может указывать, что каждый клиент может иметь несколько заказов, а каждый заказ относится только к одному клиенту.
Сущности, атрибуты и связи используются для создания структуры базы данных и определения отношений между данными. Они помогают организовать информацию и обеспечить целостность и эффективность доступа к данным [14]. 
2.3	Запросы к информационной системе
Вывод автомобилей по ценам
SELECT * FROM autopark ORDER BY cena DESC
 
Рисунок 1. Результат запроса «Вывод автомобилей по ценам».
Добавление блюда
INSERT INTO `autopark` (`id_auto`, `id_brend`, `id_model`, `id_class`, `id_kuzov`, `id_fuel`, `id_trans`, `engine`, `numb_engine`, `cena`, `id_color`, `image`) VALUES (NULL, '3', '2', '2', '4', '1', '3', '230', '111111111111', '1200', '3', 'images/auto1.png')
 
Рисунок 2. Результат запроса «Добавление автомобиля».

Удаление характеристики автомобиля
DELETE FROM `colors` WHERE `colors`.`id_color` = 4
 
 

Рисунок 3. Результат запроса «Удаление характеристик автомобиля».




Изменение цены автомобиля
UPDATE `autopark` SET `cena` = '2800' WHERE `autopark`.`id_auto` = 1;
 
 
Рисунок 4. Результат запроса «Изменение цены автомобиля».



Результатом данной главы стал анализ требований к базе данных, ее разработка и составление EER-диаграммы для информационной системы. Также, были сделаны SQL-запросы на CRUD (Create – создание, Read – чтение, Update – изменение, Delete – удаление) к БД.
 
ГЛАВА 3. РАЗРАБОТКА ИНФОРМАЦИОННОЙ СИСТЕМЫ
3.1	Разработка кода информационной системы
Разработка информационной системы (ИС) – это процесс создания и внедрения комплексной системы, которая обрабатывает, хранит, передает и управляет информацией в рамках организации или бизнеса. ИС включает в себя программное обеспечение, аппаратное обеспечение, базы данных, сетевую инфраструктуру и другие компоненты, необходимые для эффективного функционирования системы. 
Этапы разработки информационной системы включают следующие шаги: анализ и сбор требований, определение функциональности и архитектуры системы, разработку дизайна и интерфейса, программирование и создание компонентов, тестирование и отладку, интеграцию и внедрение системы, обучение пользователей, поддержку и обновление системы в дальнейшем [3].
Каждый этап разработки информационной системы имеет свою значимость и помогает обеспечить успешное внедрение и использование системы в организации или бизнесе.
Для разработки использовались такие языки и технологии как: 
•	HTML (от англ. HyperText Markup Language — «язык гипертекстовой разметки») — стандартизированный язык разметки документов для просмотра веб-страниц в браузере. Веб-браузеры получают HTML документ от сервера по протоколам HTTP/HTTPS или открывают с локального диска, далее интерпретируют код в интерфейс, который будет отображаться на экране монитора [15].
•	CSS — язык описания внешней страницы. Он отвечает за визуальную красоту и оформление сайта. 
•	PHP (Hypertext PreProcessor, «препроцессор гипертекста») — скриптовый язык программирования. Имеет открытый исходный код. Изначально создавался для разработки веб-приложений, но в процессе обновлений стал языком общего назначения [13].
•	MySQL — это реляционная система управления базами данных(СУБД), которая распространяется как свободное программное обеспечение. Является одной из наиболее популярных, так как отличается гибкостью, легкостью, удобством в использовании [11].
•	JavaScript (JS) — это высокоуровневый интерпретируемый язык программирования, широко используемый для добавления интерактивности и динамического поведения на веб-страницы. Он позволяет создавать сложные функции, взаимодействовать с элементами страницы, выполнять асинхронные запросы к серверу и многое другое [8].
•	jQuery — набор функций JavaScript, фокусирующийся на взаимодействии JavaScript и HTML. Библиотека jQuery помогает легко получать доступ к любому элементу DOM, обращаться к атрибутам и содержимому элементов DOM, манипулировать ими. Также библиотека jQuery предоставляет удобный API для работы с AJAX. Разработка jQuery ведётся командой добровольцев на пожертвования [1].
Физическая структура проекта представлена на рисунке 6:
 
Рисунок 5. Физическая структура проекта.
Фрагменты кода для минимально жизнеспособного продукта будут приведены ниже:
 
Рисунок 6. Функционал вывода автомобилей с ценой, классом и характеристиками.
 


Рисунок 7. Интерфейс вывода автомобилей с ценой, классом и характеристиками.

 
Рисунок 8. Функционал добавления автомобиля.
 
Рисунок 9. Интерфейс добавления автомобиля.
 
Рисунок 10. Функционал аренды автомобиля.
 
Рисунок 11. Интерфейс аренды автомобиля
 
Рисунок 12. Скрипт для формы обратной связи.
 
Рисунок 13. Интерфейс формы обратной связи.
 
Рисунок 14. Функционал редактирования личной информации.
 
Рисунок 15. Интерфейс редактирования личной информации.
 
Рисунок 16. Функционал авторизации на сайте.
 
Рисунок 17. Интерфейс авторизации на сайте.
 
Рисунок 18. Функционал регистрации на сайте.

 
Рисунок 19. Интерфейс регистрации на сайте.

В результате данной главы был разработан веб-сайт для проката автомобилей «AutoRent». Данный сайт является многофункциональным для пользователей и администраторов. Был реализован минимально жизнеспособный продукт, а также сделаны дополнительные возможности в виде подсчета суммы за аренду автомобиля.
 
ГЛАВА 4. ТЕСТИРОВАНИЕ ИНФОРМАЦИОННОЙ СИСТЕМЫ
4.1	План тестирования
Тестирование информационной системы (ТИС) является процессом проверки и оценки функциональности, надежности, безопасности и производительности ИС. Целью тестирования ИС является выявление ошибок, дефектов и недостатков в системе, а также проверка соответствия системы требованиям и ожиданиям пользователей [5].
Этапы тестирования информационной системы включают планирование, разработку тестовых случаев, выполнение тестов, анализ результатов и документирование [4].
Документы, которые обычно используются для тестирования информационных систем, включают планы тестирования, требования к системе, спецификации функциональности, тестовые случаи и отчеты о тестировании.
4.2	Написание тест-кейсов
Тест-кейс – это документ, который описывает последовательность шагов, условия и ожидаемые результаты для тестирования определенного функционала, программного модуля или системы. Тест-кейсы разрабатываются с целью проверки соответствия программного продукта требованиям и обеспечения его качества. Они помогают структурировать и систематизировать процесс тестирования и обеспечивают повторяемость тестовых сценариев при различных условиях [9].
Этапы создания тест-кейсов обычно включают анализ требований и функциональности системы, определение тестовых сценариев, разработку шагов тестирования, установку предусловий и ожидаемых результатов, а также документирование тест-кейсов для последующего использования в процессе тестирования [16].
Чтобы протестировать вручную некоторые функции информационной системы необходимо составить тест-кейсы.
Таблица 3
«Тест-кейс: проверка регистрации»
Шаги	Описание шага	Результат
Открыть форму регистрации	Перейти на страницу «Login» и нажать на ссылку «Зарегистрироваться»	Отображение формы не вызывает ошибок
Заполнить форму	Ввести корректные данные для регистрации	Успешно введенные данные
Отправить форму	Нажать на кнопку «Зарегистрироваться»	Успешная регистрация и переадресация на главную страницу
Таблица 4
«Тест-кейс: проверка входа»
Шаги	Описание шага	Результат
Открыть форму входа	Перейти на страницу «Login»	Отображение формы не вызывает ошибок
Заполнить форму	Ввести корректные данные для входа	Успешно введенные данные
Отправить форму	Нажать на кнопку «Войти»	Успешный вход и переадресация на главную страницу
Таблица 5
«Тест-кейс: проверка аренды»
Шаги	Описание шага	Результат
Выбрать нужный автомобиль	Нажать на кнопку «Арендовать»	Сообщение «Вы не авторизованы»
Авторизация	Перейти в личный кабинет и ввести корректные данные для входа	Успешно введенные данные
Заполнить форму аренды автомобиля	Ввести необходимые данные для аренды	Успешно введенные данные
Отправить форму	Нажать на кнопку
«Арендовать»	Успешная аренда автомобиля
Таблица 6
«Тест-кейс: проверка добавления автомобиля в базу»
Шаги	Описание шага	Результат
Авторизоваться под ролью администратора	Перейти на страницу «Login» и авторизоваться	Успешный вход от имени администратора
Открыть форму добавления блюда	Перейти в раздел Автопарк и нажать на кнопку добавления автомобиля	Форма отображается корректно
Заполнить форму	Ввести необходимые данные для добавления автомобиля	Успешно введенные данные
Отправить форму	Нажать на кнопку «Добавить автомобиль»	Автомобиль успешно добавлен
4.3	Юнит-тестирование
Юнит-тестирование – это метод тестирования программного обеспечения, при котором отдельные модули или компоненты кода (юниты) проверяются на корректность и соответствие ожидаемому поведению [6].
Этапы создания юнит-тестов обычно включают выбор модуля для тестирования, определение ожидаемого поведения модуля, написание тестового кода, выполнение тестов и анализ результатов для проверки корректности работы отдельных модулей программы [7].
Чтобы не допустить ошибок из-за человеческого фактора, я реализую несколько юнит-тестов. Созданные мною юнит-тесты приведены ниже:
Таблица 8
«Юнит-тесты для информационной системы»
Идентификатор	Модуль сайта	Заглавие	Ожидаемый результат	Текущий результат
autotest	Регистрация пользователя	Проверка работы регистрации	Зарегистрирован новый пользователь	Успешная регистрация пользователя
В ходе данной главы была протестирована информационная система для работы проката автомобилей. Были составлены тест-кейсы и юнит-тесты. Результаты тестирования оказались положительными.
 
ЗАКЛЮЧЕНИЕ
В рамках данной курсовой работы была разработана информационная система для проката автомобилей с целью создания эффективной и автоматизированной платформы, которая позволит оптимизировать процессы управления и предоставления услуг проката автомобилей.
В ходе работы был проведен анализ и изучение требований бизнеса. На основе полученных данных были определены основные функциональные требования к ИС.
В результате разработки была создана ИС, включающая модули для администратора, аренды автомобиля, регистрация и авторизация пользователей, добавление новых автомобилей. Это позволяет обеспечивать лучшее обслуживание пользователей сайта. Поставленные цели и задачи были достигнуты.
За время разработки веб-сайта «Autorent» я научилася эффективнее верстать сайты, разбираться в серверной логике веб-приложений, тестировать программные продукты и анализировать свою работу.
В дальнейшем в программе может быть реализовано скидки по праздникам, дням рождения пользователей, возможность накопления баллов за аренду и списание баллов для бесплатной аренды автомобиля. Также, оптимизирование программного продукта будет актуально для данного сайта.
 
СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ
1.	Википедия. Свободная энциклопедия // JQuery. URL: https://ru.wikipedia.org/wiki/JQuery (10.06.2023).
2.	«Инновационные грани технического задания» Е. Е. Жукова 18.06.2020 // URL: https://cyberleninka.ru/article/n/inovatsionnye-grani-tehnicheskogo-zadaniya (05.04.2023).
3.	«Информационные системы. Теоретические проблемы» Л. Н. Мазур. г. Екатеринбург 1997 // URL: https://elar.urfu.ru/bitstream/10995/37398/1/5-230-06786-1_1997.pdf (24.04.2023).
4.	«Основы тестирования программного обеспечения» В. Н. Пероцкая, Д. А. Градусов. г. Владимир 2017 // URL: https://dspace.www1.vlsu.ru/bitstream/123456789/5909/1/01621.pdf (25.06.2023).
5.	«Тестирование программного обеспечения. Базовый курс» Святослав Куликов. Версия книги 3.2.2 от 17.04.2023 // URL: https://skillbox.ru/media/code/15_knig_po_testirovaniyu_programmnogo_obespecheniya/ (23.06.2023).
6.	Хабр // Юнит-тестирование для чайников URL: https://habr.com/ru/articles/169381/ (30.06.2023).
7.	Яндекс.Практикум // Юнит-тесты: что это такое, зачем они нужны и как их проводят. URL: https://practicum.yandex.ru/blog/chto-takoe-modulnoe-yunit-testirovanie/ (30.06.2023).
8.	DigiTrain // JavaScript. URL: https://digitrain.ru/articles/670365/ (10.06.2023).
9.	GIT book// Лекция 4, ч.3 Тест-кейсы. Курс лекций «Тестирование программного обеспечения». URL: https://sergeygavaga.gitbooks.io/kurs-lektsii-testirovanie-programnogo-obespecheni/content/lektsiya-4-ch3.html (29.06.2023).
10.	Good-code. Блог о веб-разработке и около неё. // Веб-разработка в 2023 году. URL: https://good-code.ru/veb-razrabotka/ (01.04.2023).
11.	QueryBase // В чем разница между MySQL и SQL. URL: https://querybase.ru/v-chem-raznitsa-mezhdu-mysql-i-sql/ (09.06.2023).
12.	SkillFactoryMedia // PHP. URL: https://blog.skillfactory.ru/glossary/php/ (05.06.2023).
13.	StudFiles // Определение информационной системы, способы структурирования информации. Определения: база данных, СУБД, транзакция, согласованность данных. История развития СУБД. Функции и назначение СУБД. Технологии доступа к данным. URL: https://studfile.net/preview/3828536/ (12.05.2023).
14.	TCT // Электронный учебник. Учебное пособие «Язык HTML» URL: https://tct.ru/upload/elekt_uchebnik/HTMLCSS/data/html1.html (15.06.2023).
15.	ViktorZ // Правильно пишем тест-кейсы. Памятка начинающему специалисту по тестированию. URL: https://victorz.ru/202001101079 (29.06.2023).
 
СПИСОК ТАБЛИЦ
Таблица 1	8
Таблица 2	11
Таблица 3	27
Таблица 4	27
Таблица 5	27
Таблица 6	28
Таблица 7	29

 
СПИСОК ИЛЛЮСТРАЦИЙ
Рисунок 1. Результат запроса «Вывод автомобилей по ценам».	13
Рисунок 2. Результат зпроса «Добавление автомобиля».	13
Рисунок 3. Результат запроса «Удаление характеристик автомобиля».	13
Рисунок 4. Результат запроса «Изменение цены автомобиля».	14
Рисунок 5. Физическая структура проекта.	17
Рисунок 6. Функционал вывода автомобилей с ценой, классом и характеристиками	18
Рисунок 7. Интерфейс вывода автомобилей с ценой, классом и характеристиками.	19
Рисунок 8. Функционал добавления автомобиля.	19
Рисунок 9. Интерфейс добавления автомобиля.	20
Рисунок 10. Функционал аренды автомобиля.	20
Рисунок 11. Интерфейс аренды автомобиля	21
Рисунок 12. Скрипт для формы обратной связи..	21
Рисунок 13. Интерфейс формы обратной связи.	22
Рисунок 14. Функционал редактирования личной информации.	22
Рисунок 15. Интерфейс редактирования личной информации.	23
 Рисунок 16. Функционал авторизации на сайте.	23
Рисунок 17. Интерфейс авторизации на сайте.	23
Рисунок 18. Функционал регистрации на сайте.	24
Рисунок 19. Интерфейс регистрации на сайте.	24
